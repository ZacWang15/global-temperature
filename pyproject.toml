[project]
name = "global-temperature"
version = "0.1.3"
description = ""
authors = [
    {name = "zacwang",email = "zacwang15@gmail.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "pygeohash (>=3.0.1,<4.0.0)",
    "pandas (>=2.2.3,<3.0.0)",
    "pyarrow (>=19.0.1,<20.0.0)",
    "numpy (>=2.2.4,<3.0.0)",
    "pytest (>=8.3.5,<9.0.0)",
    "scipy (>=1.15.2,<2.0.0)",
    "pyyaml (>=6.0.2,<7.0.0)",
    "requests (>=2.32.3,<3.0.0)",
    "pandera[pandas] (>=0.23.1,<0.24.0)"
]

[tool.poetry]
packages = [{include = "global_temperature", from = "src"}]


[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
pytest-cov = "^6.2.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry.urls]
homepage = "https://github.com/ZacWang15/global-temperature"
repository = "https://github.com/ZacWang15/global-temperature"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--cov=src/global_temperature",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80"
]

[tool.coverage.run]
source = ["src/global_temperature"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
